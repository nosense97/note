
var StackedColumnChart1 = () => {
    var dataTable = []
    var getDataModel = () => {
        dataTable.push()
    }

    dataTable.push(['Task', 'Hours per Day'])
    getDataModel(locations, dataTable)

    var options = {}

    drawStackedColumnCharts('#chart_div', dataTable, options)
}



export var drawPieCharts = (container_div, model, option) => {

    var BuildChart = (params) => {

        let divElememt = document.querySelector(params.div)
        if (divElememt) {

            google.charts.load('current', {
                'packages': ['corechart']
            });
            google.charts.setOnLoadCallback(drawVisualization);

            function drawVisualization() {

                var data = google.visualization.arrayToDataTable(params.dataTable);
                var chart = new google.visualization.PieChart(divElememt);
                chart.draw(data, params.options);
            }
        } else {
            console.log('error divElememt', divElememt)
        }
    }

    BuildChart.DataModel = () => { return model }

    BuildChart.Setting = () => { return option }

    BuildChart({
        div: container_div, //'#chart_div',
        dataTable: BuildChart.DataModel(),
        options: BuildChart.Setting(),
    })
}